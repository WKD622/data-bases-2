-- POMOCNICZO
CREATE OR REPLACE FUNCTION DOSTEPNE_MIEJSCA(ID_W NUMBER)
  RETURN NUMBER
IS
  LICZBA_WOLNYCH_MIEJSC NUMBER;
  BEGIN
    SELECT W.LICZBA_MIEJSC -
           NVL((SELECT COUNT(*) FROM REZERWACJE R WHERE W.ID_WYCIECZKI = R.ID_WYCIECZKI GROUP BY R.ID_WYCIECZKI),
               0) INTO LICZBA_WOLNYCH_MIEJSC
    FROM WYCIECZKI W
    WHERE W.ID_WYCIECZKI = 6;
    RETURN LICZBA_WOLNYCH_MIEJSC;
  END;


-- A) DODAJ_REZERWACJE(ID_WYCIECZKI, ID_OSOBY), PROCEDURA POWINNA KONTROLOWAĆ CZY WYCIECZKA
-- JESZCZE SIĘ NIE ODBYŁA, I CZY SA WOLNE MIEJSCA
CREATE OR REPLACE PROCEDURE DODAJ_REZERWACJE(ID_W NUMBER, ID_O NUMBER)
AS
  BEGIN
    DECLARE
      WYCIECZKI NUMBER;
      OSOBA     NUMBER;
    BEGIN

      SELECT COUNT(W.ID_WYCIECZKI) INTO WYCIECZKI FROM WYCIECZKI W WHERE W.ID_WYCIECZKI = ID_W;
      SELECT O.ID_OSOBY INTO OSOBA FROM OSOBY O WHERE O.ID_OSOBY = ID_O;

      IF WYCIECZKI > 0 AND OSOBA > 0 AND DOSTEPNE_MIEJSCA(ID_W) > 0
      THEN
        INSERT INTO REZERWACJE (ID_WYCIECZKI, ID_OSOBY, STATUS) VALUES (ID_W, ID_O, 'N');
      END IF;

    END;
  END;

-- B) ZMIEN_STATUS_REZERWACJI(ID_REZERWACJI, STATUS), PROCEDURA KONTROLOWAĆ CZY MOŻLIWA JEST
-- ZMIANA STATUSU, NP. ZMIANA STATUSU JUŻ ANULOWANEJ WYCIECZKI (PRZYWRÓCENIE DO STANU
-- AKTYWNEGO NIE ZAWSZE JEST MOŻLIWE)
CREATE OR REPLACE PROCEDURE ZMIEN_STATUS_REZERWACJI(ID_REZERWACJI NUMBER, NEW_STATUS CHAR)
AS
  BEGIN
    DECLARE
      ID_R NUMBER;
      S    CHAR;
    BEGIN
      SELECT COUNT(R.NR_REZERWACJI) INTO ID_R FROM REZERWACJE R WHERE R.NR_REZERWACJI = ID_REZERWACJI;
      SELECT R.STATUS INTO S FROM REZERWACJE R WHERE R.NR_REZERWACJI = ID_REZERWACJI;
      IF ID_R = 1
      THEN
        IF (S <> 'A')
        THEN
          UPDATE REZERWACJE R SET R.STATUS = NEW_STATUS WHERE R.NR_REZERWACJI = ID_REZERWACJI;
        END IF;
      END IF;
    END;
  END;

-- C) ZMIEN_LICZBE_MIEJSC(ID_WYCIECZKI, LICZBA_MIEJSC), NIE WSZYSTKIE ZMIANY LICZBY MIEJSC SĄ
-- DOZWOLONE, NIE MOŻNA ZMNIEJSZYĆ LICZBY MIESC NA WARTOŚĆ PONIŻEJ LICZBY ZAREZERWOWANYCH
-- MIEJSC
CREATE OR REPLACE PROCEDURE ZMIEN_LICZBE_MIEJSC(ID_WYCIECZKI_ NUMBER, NOWA_LICZBA_MIEJSC NUMBER)
AS
  BEGIN
    DECLARE
      CALKOWITA_LICZBA_MIEJSC NUMBER;
      DOSTEPNE_MIEJSCA_ NUMBER;
    BEGIN
      SELECT W.LICZBA_MIEJSC INTO CALKOWITA_LICZBA_MIEJSC FROM WYCIECZKI W WHERE W.ID_WYCIECZKI = ID_WYCIECZKI_;
      SELECT DOSTEPNE_MIEJSCA(ID_WYCIECZKI_) INTO DOSTEPNE_MIEJSCA_ FROM DUAL;
      IF (NOWA_LICZBA_MIEJSC >= (CALKOWITA_LICZBA_MIEJSC - DOSTEPNE_MIEJSCA_))
      THEN
        UPDATE WYCIECZKI W SET W.LICZBA_MIEJSC = NOWA_LICZBA_MIEJSC WHERE W.ID_WYCIECZKI = ID_WYCIECZKI_;
      END IF;
    END;
  END;


-- 6. DODAJEMY TABELĘ DZIENNIKUJĄCĄ ZMIANY STATUSU REZERWACJI
-- REZERWACJE_LOG(ID, ID_REZERWACJI, DATA, STATUS)
-- NALEŻY ZMIENIĆ WARSTWĘ PROCEDUR MODYFIKUJĄCYCH DANE TAK ABY DOPISYWAŁY INFORMACJĘ DO
-- DZIENNIKA
CREATE OR REPLACE PROCEDURE ZMIEN_STATUS_REZERWACJI(ID_REZERWACJI NUMBER, NOWY_STATUS_ CHAR)
AS
  BEGIN
    DECLARE
      ID_R            NUMBER;
      S               CHAR;
      DZISIEJSZA_DATA DATE;
    BEGIN
      SELECT COUNT(R.NR_REZERWACJI) INTO ID_R FROM REZERWACJE R WHERE R.NR_REZERWACJI = ID_REZERWACJI;
      SELECT R.STATUS INTO S FROM REZERWACJE R WHERE R.NR_REZERWACJI = ID_REZERWACJI;
      SELECT CURRENT_DATE INTO DZISIEJSZA_DATA FROM DUAL;
      IF ID_R = 1
      THEN
        IF (S <> 'A') AND NOWY_STATUS_ IN ('N', 'P', 'Z') AND NOWY_STATUS_ <> S
        THEN
          UPDATE REZERWACJE R SET R.STATUS = NOWY_STATUS_ WHERE R.NR_REZERWACJI = ID_REZERWACJI;
          INSERT INTO DZIENNIK_REZERWACJI (NR_REZERWACJI, DATA, NOWY_STATUS)
          VALUES (ID_REZERWACJI, DZISIEJSZA_DATA, NOWY_STATUS_);
        END IF;
      END IF;
    END;
  END;
